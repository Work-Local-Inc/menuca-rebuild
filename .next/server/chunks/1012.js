"use strict";exports.id=1012,exports.ids=[1012],exports.modules={1012:(e,r,o)=>{o.r(r),o.d(r,{addOrderToQueue:()=>addOrderToQueue,default:()=>handler,markOrderProcessed:()=>markOrderProcessed});var t=o(928);let s=[],d=new Set;async function handler(e,r){if("GET"!==e.method)return r.status(405).json({error:"Method not allowed - use GET"});try{console.log("\uD83D\uDCF1 A19 tablet polling for orders via getOrder()...");let e=s.find(e=>!d.has(e.id.toString()));if(!e)return console.log("\uD83D\uDCED No pending orders for A19 tablet"),r.status(200).json({message:"No pending orders",orders:[],timestamp:new Date().toISOString()});let o=(0,t.j2)(e,parseInt(e.id));return console.log(`📤 Returning order ${e.id} to A19 tablet:`,o),r.status(200).json({message:"Order available",order:o,timestamp:new Date().toISOString()})}catch(e){return console.error("❌ getOrder() endpoint error:",e),r.status(500).json({error:"Failed to get order",message:e instanceof Error?e.message:"Unknown error"})}}function addOrderToQueue(e){console.log(`➕ Adding order ${e.id} to tablet queue`),s.push(e)}function markOrderProcessed(e){console.log(`✅ Marking order ${e} as processed`),d.add(e)}}};