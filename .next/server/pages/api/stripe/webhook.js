"use strict";(()=>{var e={};e.id=815,e.ids=[815],e.modules={1287:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5012:(e,t,o)=>{o.r(t),o.d(t,{config:()=>m,default:()=>p,routeModule:()=>_});var n={};o.r(n),o.d(n,{config:()=>d,default:()=>handler});var r=o(1802),a=o(7153),i=o(6249);let s=require("stripe");var c=o.n(s);async function getRawBody(e){let t=[];for await(let o of e)t.push("string"==typeof o?Buffer.from(o):o);return Buffer.concat(t)}let l=process.env.STRIPE_SECRET_KEY?new(c())(process.env.STRIPE_SECRET_KEY,{apiVersion:"2025-07-30.basil"}):null,u=process.env.STRIPE_WEBHOOK_SECRET,d={api:{bodyParser:!1}};async function sendOrderToTabletMenuCA(e,t){try{console.log(`🎯 Sending order ${t} to tablet.menu.ca via webhook...`);let o=await fetch(`${process.env.NEXT_PUBLIC_BASE_URL||"https://menuca-rebuild.vercel.app"}/api/inject-tablet-order`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({order:{id:t,customer:{name:e.customer_name||"Stripe Customer",phone:e.customer_phone||"555-1234",email:e.customer_email||"test@menuca.com"},items:[{name:"\uD83C\uDFAF STRIPE WEBHOOK TEST ORDER",price:(e.amount||115)/100,quantity:1,special_instructions:"Order triggered by Stripe payment webhook"}],totals:{total:(e.amount||115)/100},delivery_instructions:`Payment ID: ${e.payment_intent_id}`,restaurant_id:"A19"}})}),n=await o.json();return console.log(`📡 Tablet injection result:`,n),n}catch(e){return console.error("❌ Webhook tablet integration failed:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async function handler(e,t){let o;if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});if(!l)return t.status(500).json({error:"Stripe not configured"});try{let t=await getRawBody(e),n=e.headers["stripe-signature"];u?o=l.webhooks.constructEvent(t,n,u):(console.log("⚠️ No webhook secret - processing unsigned webhook for testing"),o=JSON.parse(t.toString()))}catch(e){return console.error("❌ Webhook signature verification failed:",e),t.status(400).json({error:"Webhook signature verification failed"})}if(console.log(`🎯 Stripe webhook received: ${o.type}`),"payment_intent.succeeded"===o.type){let e=o.data.object;console.log("\uD83D\uDCB3 Payment succeeded!",{id:e.id,amount:e.amount,currency:e.currency,metadata:e.metadata});let t={payment_intent_id:e.id,amount:e.amount,currency:e.currency,customer_name:e.metadata.customer_name||"Webhook Customer",customer_phone:e.metadata.customer_phone||"555-WEBHOOK",customer_email:e.receipt_email||"webhook@menuca.com"},n=parseInt(e.id.replace(/\D/g,"").slice(-6))||Date.now()%1e5;console.log(`🎯 Triggering tablet integration for order ${n}...`);let r=await sendOrderToTabletMenuCA(t,n);console.log(`📱 Tablet integration result:`,r),console.log("\uD83D\uDD0D COMPLETE PAYMENT FLOW:",{webhook_event:o.type,payment_intent:e.id,order_id:n,tablet_result:r,timestamp:new Date().toISOString()})}switch(o.type){case"payment_intent.payment_failed":console.log("❌ Payment failed:",o.data.object);break;case"payment_intent.canceled":console.log("\uD83D\uDEAB Payment canceled:",o.data.object);break;default:console.log(`🔔 Unhandled event type: ${o.type}`)}return t.status(200).json({received:!0})}let p=(0,i.l)(n,"default"),m=(0,i.l)(n,"config"),_=new r.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/stripe/webhook",pathname:"/api/stripe/webhook",bundlePath:"",filename:""},userland:n})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),o=t.X(0,[222],()=>__webpack_exec__(5012));module.exports=o})();