"use strict";(()=>{var e={};e.id=7832,e.ids=[7832],e.modules={2885:e=>{e.exports=require("@supabase/supabase-js")},1287:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9888:(e,r,t)=>{t.r(r),t.d(r,{config:()=>d,default:()=>l,routeModule:()=>p});var a={};t.r(a),t.d(a,{default:()=>handler});var s=t(1802),n=t(7153),u=t(6249),i=t(2885);let o=(0,i.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL,(process.env.SUPABASE_SERVICE_ROLE_KEY||"").replace(/\s/g,""));async function handler(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{id:t}=e.query;if(!t||"string"!=typeof t)return r.status(400).json({error:"Restaurant ID is required"});let{logo_url:a,banner_url:s}=e.body||{},{data:n,error:u}=await o.from("restaurants").update({logo_url:a??null,banner_url:s??null,updated_at:new Date().toISOString()}).eq("id",t).select("id, logo_url, banner_url").single();if(u)return r.status(500).json({error:"Failed to update images",details:u});return r.status(200).json({success:!0,restaurant:n})}catch(e){return r.status(500).json({error:"Internal server error"})}}let l=(0,u.l)(a,"default"),d=(0,u.l)(a,"config"),p=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/restaurants/[id]/images",pathname:"/api/restaurants/[id]/images",bundlePath:"",filename:""},userland:a})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[4222],()=>__webpack_exec__(9888));module.exports=t})();